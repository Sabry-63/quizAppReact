{"version":3,"sources":["redux/actionType.js","redux/action.js","components/SelectFiled.jsx","components/TextFiledCop.jsx","hooks/useAxios.jsx","pages/Settings.jsx","pages/Questions.jsx","pages/FinalScreen.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["CHANGE_CATEGORY","CHANGE_DEFFICLTY","CHANGE_TYPE","CHANGE_AMOUNT","CHANGE_SCORE","handleAmountChange","payload","type","handleScoreChange","Selectfiled","props","label","options","useState","value","setValue","dispatch","useDispatch","Box","mt","width","FormControl","fullWidth","size","InputLabel","Select","onChange","e","target","handleDifficltyChange","handleTypeChange","map","id","name","MenuItem","TextFiledCop","TextField","variant","axios","defaults","baseURL","Useaxios","url","respons","setRespons","error","setError","loading","setLoading","useEffect","get","then","res","data","catch","err","finally","Settings","navigate","useNavigate","CircularProgress","Typography","color","Grid","p","borderRadius","boxShadow","bgcolor","fontWeight","onSubmit","preventDefault","trivia_categories","Button","Questions","useSelector","state","qu_category","qu_diffic","qu_type","qu_amount","score","ref","useRef","questionIndex","setQuestionIndex","option","setOption","checked","setchecked","countRef","apiUrl","concat","results","length","question","answers","incorrect_answers","splice","max","Math","floor","random","correct_answer","timeLeft","setTimeLeft","current","click","intervalId","setInterval","t","clearInterval","container","spacing","xs","md","mr","backgroundColor","sx","m","component","borderBottom","pb","mb","FormLabel","decode","RadioGroup","FormControlLabel","control","Radio","className","borderTop","borderColor","Finalscreen","onClick","App","basename","process","Container","maxWidth","textAlign","height","display","alignItems","path","exact","element","initialState","reducer","action","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.6d60e251.chunk.js","sourcesContent":["export const CHANGE_CATEGORY = \"CHANGE_CATEGORY\";\r\nexport const CHANGE_DEFFICLTY = \"CHANGE_DEFFICLTY\";\r\nexport const CHANGE_TYPE = \"CHANGE_TYPE\";\r\nexport const CHANGE_AMOUNT = \"CHANGE_AMOUNT\";\r\nexport const CHANGE_SCORE = \"CHANGE_SCORE\";\r\n","import {\r\n    CHANGE_CATEGORY,\r\n    CHANGE_DEFFICLTY,\r\n    CHANGE_TYPE,\r\n    CHANGE_AMOUNT,\r\n    CHANGE_SCORE,\r\n} from \"./actionType\";\r\n\r\nexport const handleCatogryChange = (payload) => ({\r\n    type: CHANGE_CATEGORY,\r\n    payload,\r\n});\r\n\r\nexport const handleDifficltyChange = (payload) => ({\r\n    type: CHANGE_DEFFICLTY,\r\n    payload,\r\n});\r\n\r\nexport const handleTypeChange = (payload) => ({\r\n    type: CHANGE_TYPE,\r\n    payload,\r\n});\r\n\r\nexport const handleAmountChange = (payload) => ({\r\n    type: CHANGE_AMOUNT,\r\n    payload,\r\n});\r\n\r\nexport const handleScoreChange = (payload) => ({\r\n    type: CHANGE_SCORE,\r\n    payload,\r\n});\r\n","import { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    handleCatogryChange,\r\n    handleDifficltyChange,\r\n    handleTypeChange,\r\n} from \"./../redux/action\";\r\n\r\nconst Selectfiled = (props) => {\r\n    const { label, options } = props;\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n        switch (label) {\r\n            case \"Category\":\r\n                dispatch(handleCatogryChange(e.target.value));\r\n                break;\r\n            case \"Difficulty\":\r\n                dispatch(handleDifficltyChange(e.target.value));\r\n                break;\r\n            case \"Type\":\r\n                dispatch(handleTypeChange(e.target.value));\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n    return (\r\n        <Box mt={3} width=\"100%\">\r\n            <FormControl fullWidth size=\"small\">\r\n                <InputLabel>{label}</InputLabel>\r\n                <Select value={value} label={label} onChange={handleChange}>\r\n                    {options.map(({ id, name }) => {\r\n                        return (\r\n                            <MenuItem value={id} key={id}>\r\n                                {name}\r\n                            </MenuItem>\r\n                        );\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Selectfiled;\r\n","import React from \"react\";\r\nimport { Box } from \"@mui/system\";\r\nimport { FormControl, TextField } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { handleAmountChange } from \"../redux/action\";\r\n\r\nconst TextFiledCop = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n        dispatch(handleAmountChange(e.target.value));\r\n    };\r\n    return (\r\n        <Box mt={3} width=\"100%\">\r\n            <FormControl fullWidth>\r\n                <TextField\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                    label=\"Amount Of Questions\"\r\n                    type=\"number\"\r\n                    size=\"small\"\r\n                />\r\n            </FormControl>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default TextFiledCop;\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\naxios.defaults.baseURL = \"https://opentdb.com\";\r\n\r\nconst Useaxios = ({ url }) => {\r\n    const [respons, setRespons] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fatchData = () => {\r\n            axios\r\n                .get(url)\r\n                .then((res) => setRespons(res.data))\r\n                .catch((err) => setError(err))\r\n                .finally(() => setLoading(false));\r\n        };\r\n        fatchData();\r\n    }, [url]);\r\n\r\n    return { respons, error, loading };\r\n};\r\n\r\nexport default Useaxios;\r\n","import Selectfiled from \"./../components/SelectFiled\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Button, CircularProgress, Typography } from \"@mui/material\";\r\nimport TextFiledCop from \"./../components/TextFiledCop\";\r\nimport Useaxios from \"./../hooks/useAxios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Grid } from \"@mui/material\";\r\nconst Settings = () => {\r\n    const { respons, error, loading } = Useaxios({ url: \"/api_category.php\" });\r\n    const navigate = useNavigate();\r\n    if (loading) {\r\n        return (\r\n            <Box>\r\n                <CircularProgress />\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Typography variant=\"h6\" color=\"red\">\r\n                Some Went Wrong!\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    const optionsDifficulty = [\r\n        { id: \"easy\", name: \"Easy\" },\r\n        { id: \"medium\", name: \"Medium\" },\r\n        { id: \"hard\", name: \"Hard\" },\r\n    ];\r\n\r\n    const optionsType = [\r\n        { id: \"multiple\", name: \"Multiple Choise\" },\r\n        { id: \"boolean\", name: \"True / False\" },\r\n    ];\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        navigate(\"/questions\");\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Grid p={3} borderRadius={2} boxShadow={3} bgcolor=\"white\">\r\n                <Typography variant=\"h3\" fontWeight=\"bold\" color=\"primary.main\">\r\n                    Quiz App\r\n                </Typography>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Selectfiled\r\n                        options={respons.trivia_categories}\r\n                        label=\"Category\"\r\n                    />\r\n                    <Selectfiled\r\n                        options={optionsDifficulty}\r\n                        label=\"Difficulty\"\r\n                    />\r\n                    <Selectfiled options={optionsType} label=\"Type\" />\r\n                    <TextFiledCop />\r\n                    <Box mt={3} width=\"100%\">\r\n                        <Button fullWidth variant=\"contained\" type=\"submit\">\r\n                            Get Start\r\n                        </Button>\r\n                    </Box>\r\n                </form>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","import Useaxios from \"./../hooks/useAxios\";\r\nimport {\r\n    Box,\r\n    FormControl,\r\n    Typography,\r\n    Radio,\r\n    RadioGroup,\r\n    FormLabel,\r\n    FormControlLabel,\r\n    CircularProgress,\r\n    Button,\r\n    Grid,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { decode } from \"html-entities\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { handleScoreChange } from \"./../redux/action\";\r\n\r\nconst Questions = () => {\r\n    const { qu_category, qu_diffic, qu_type, qu_amount, score } = useSelector(\r\n        (state) => state\r\n    );\r\n\r\n    // Create Random Num\r\n    const getRandomInt = (max) => {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    };\r\n\r\n    // Use Dispatch & React Rourter Dom\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const ref = useRef(null);\r\n\r\n    // Use State\r\n    const [questionIndex, setQuestionIndex] = useState(0);\r\n    const [option, setOption] = useState([]);\r\n    // Set Radio Value\r\n    const [value, setValue] = useState(\"\");\r\n    // Set Checked\r\n    const [checked, setchecked] = useState(true);\r\n    const checkedOn = () => setchecked(false);\r\n    // Ref To Count\r\n    const countRef = useRef(null);\r\n\r\n    // Default Api\r\n    let apiUrl = `/api.php?amount=${qu_amount}`;\r\n\r\n    // Set Api Setiing\r\n    if (qu_category) {\r\n        apiUrl = apiUrl.concat(`&category=${qu_category}`);\r\n    }\r\n    if (qu_diffic) {\r\n        apiUrl = apiUrl.concat(`&difficulty=${qu_diffic}`);\r\n    }\r\n    if (qu_type) {\r\n        apiUrl = apiUrl.concat(`&type=${qu_type}`);\r\n    }\r\n\r\n    // GET Data Form Reducer\r\n    const { respons, loading } = Useaxios({ url: apiUrl });\r\n\r\n    // Get All Answers\r\n    useEffect(() => {\r\n        if (respons?.results.length) {\r\n            const question = respons.results[questionIndex];\r\n            let answers = [...question.incorrect_answers];\r\n            answers.splice(\r\n                getRandomInt(question.incorrect_answers.length),\r\n                0,\r\n                question.correct_answer\r\n            );\r\n            setOption(answers);\r\n        }\r\n    }, [respons, questionIndex]);\r\n\r\n    // Timer Dwon\r\n    const seconds = 60;\r\n    const [timeLeft, setTimeLeft] = useState(seconds);\r\n    useEffect(() => {\r\n        if (timeLeft <= 0) {\r\n            countRef.current.click();\r\n            setTimeLeft(seconds);\r\n            return;\r\n        }\r\n        if (!loading) {\r\n            const intervalId = setInterval(() => {\r\n                setTimeLeft((t) => t - 1);\r\n            }, 1000);\r\n            return () => clearInterval(intervalId);\r\n        }\r\n    }, [timeLeft, loading]);\r\n\r\n    // If Data Is Load\r\n    if (loading) {\r\n        return (\r\n            <Box>\r\n                <CircularProgress />\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    // Select Input\r\n    const handleRadioChange = (e) => {\r\n        setValue(e.target.value);\r\n        checkedOn();\r\n    };\r\n\r\n    // Form Actions\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Next Question\r\n        if (questionIndex + 1 < respons.results.length) {\r\n            setQuestionIndex(questionIndex + 1);\r\n            setTimeLeft(seconds);\r\n            setchecked(true);\r\n            setValue(\"\");\r\n        } else {\r\n            navigate(\"/score\");\r\n        }\r\n        // Correct Ansers\r\n        if (value === respons.results[questionIndex].correct_answer) {\r\n            dispatch(handleScoreChange(score + 1));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={2} boxShadow={3} bgcolor=\"white\">\r\n                <Grid xs={12} md={8}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        p={2}\r\n                        mr={2}\r\n                        backgroundColor=\"primary.main\"\r\n                        color=\"white\"\r\n                    >\r\n                        Question {questionIndex + 1} /{respons.results.length}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} md={4}>\r\n                    <Typography\r\n                        p={2}\r\n                        variant=\"h6\"\r\n                        color={timeLeft < 10 ? \"red\" : \"primary.main\"}\r\n                    >\r\n                        Timer : {timeLeft}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid mt={2} spacing={2} container boxShadow={3} bgcolor=\"white\">\r\n                <Grid xs={12} p={2}>\r\n                    <form onSubmit={handleSubmit} ref={ref}>\r\n                        <FormControl\r\n                            sx={{ m: 3 }}\r\n                            component=\"fieldset\"\r\n                            variant=\"standard\"\r\n                        >\r\n                            <Box borderBottom={1} pb={2} mb={2}>\r\n                                <FormLabel component=\"legend\">\r\n                                    {decode(\r\n                                        respons.results[questionIndex].question\r\n                                    )}\r\n                                </FormLabel>\r\n                            </Box>\r\n                            <RadioGroup\r\n                                aria-label=\"quiz\"\r\n                                name=\"quiz\"\r\n                                value={value}\r\n                                onChange={handleRadioChange}\r\n                            >\r\n                                {option.map((data, id) => {\r\n                                    return (\r\n                                        <FormControlLabel\r\n                                            value={data}\r\n                                            control={<Radio />}\r\n                                            label={decode(data)}\r\n                                            key={id}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </RadioGroup>\r\n                            <Button\r\n                                sx={{ mt: 1, mr: 1 }}\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                ref={countRef}\r\n                                className={\r\n                                    checked === false ? \"show\" : \"hidden\"\r\n                                }\r\n                            >\r\n                                Check Answer\r\n                            </Button>\r\n                        </FormControl>\r\n                    </form>\r\n                </Grid>\r\n                <Grid\r\n                    xs={12}\r\n                    borderTop={1}\r\n                    borderColor=\"primary.main\"\r\n                    backgroundColor=\"primary.main\"\r\n                    color=\"white\"\r\n                    p={2}\r\n                >\r\n                    <Typography variant=\"h6\">\r\n                        Your Score {score} / {respons.results.length}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Questions;\r\n","import { Button, Typography } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleScoreChange, handleAmountChange } from \"./../redux/action\";\r\n\r\nimport { Grid } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst Finalscreen = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const { score } = useSelector((state) => state);\r\n\r\n    const handleBackToSetting = () => {\r\n        dispatch(handleScoreChange(0));\r\n        dispatch(handleAmountChange(50));\r\n        navigate(\"/\");\r\n        return;\r\n    };\r\n    return (\r\n        <Grid container>\r\n            <Grid xs boxShadow={2} p={5} bgcolor=\"white\">\r\n                <Typography variant=\"h4\" fontWeight=\"bold\" mb={2}>\r\n                    Final Score {score}\r\n                </Typography>\r\n                <Box>\r\n                    <Button variant=\"outlined\" onClick={handleBackToSetting}>\r\n                        Back To Setting!\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Finalscreen;\r\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport Settings from \"./pages/Settings\";\nimport Questions from \"./pages/Questions\";\nimport Finalscreen from \"./pages/FinalScreen\";\n\nimport { Container } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport \"./app.css\";\n\nconst App = () => {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Container maxWidth=\"sm\">\n                <Box\n                    textAlign=\"center\"\n                    height=\"100vh\"\n                    width={1}\n                    display=\"grid\"\n                    alignItems=\"center\"\n                >\n                    <Routes>\n                        <Route path=\"/\" exact element={<Settings />} />\n                        <Route path=\"/questions\" element={<Questions />} />\n                        <Route path=\"/score\" element={<Finalscreen />} />\n                    </Routes>\n                </Box>\n            </Container>\n        </Router>\n    );\n};\n\nexport default App;\n","import {\r\n    CHANGE_AMOUNT,\r\n    CHANGE_CATEGORY,\r\n    CHANGE_DEFFICLTY,\r\n    CHANGE_SCORE,\r\n    CHANGE_TYPE,\r\n} from \"./actionType\";\r\nconst initialState = {\r\n    qu_category: \"\",\r\n    qu_diffic: \"\",\r\n    qu_type: \"\",\r\n    qu_amount: 10,\r\n    score: 0,\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_CATEGORY:\r\n            return {\r\n                ...state,\r\n                qu_category: action.payload,\r\n            };\r\n        case CHANGE_DEFFICLTY:\r\n            return {\r\n                ...state,\r\n                qu_diffic: action.payload,\r\n            };\r\n        case CHANGE_TYPE:\r\n            return {\r\n                ...state,\r\n                qu_type: action.payload,\r\n            };\r\n\r\n        case CHANGE_AMOUNT:\r\n            return {\r\n                ...state,\r\n                qu_amount: action.payload,\r\n            };\r\n\r\n        case CHANGE_SCORE:\r\n            return {\r\n                ...state,\r\n                score: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport default createStore(reducer);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}